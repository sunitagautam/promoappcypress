{"version":3,"file":"bundle.js","sources":["../src/handlers/handleDragDrop.js","../src/constants.js","../src/handlers/getHandler.js","../src/handlers/handleInput.js","../src/helpers/isManualEventTrigger.js","../src/handlers/handleShadowInput.js","../src/handlers/handleShadowDragDrop.js","../src/error.js","../src/validators/validateSubject.js","../src/upload.js","../src/index.js","../src/helpers/ensureDefaults.js","../src/validators/validateOptions.js","../src/validators/validateFiles.js","../src/helpers/createFilesAsync.js","../src/helpers/getEncoding.js","../src/helpers/getFileBlobAsync.js","../src/validators/validateEncoding.js"],"sourcesContent":["export default ({ subject, force }, { files }) => {\n  const eventPayload = {\n    force,\n    dataTransfer: {\n      files,\n      types: ['Files'],\n    },\n  };\n\n  return cy\n    .wrap(subject, { log: false })\n    .trigger('dragenter', eventPayload)\n    .trigger('drop', eventPayload)\n    .trigger('dragleave', eventPayload);\n};\n","export const SUBJECT_TYPE = Object.freeze({\n  INPUT: 'input',\n  DRAG_N_DROP: 'drag-n-drop',\n});\n\nexport const SUBJECT_NATURE = Object.freeze({\n  DOM: 'dom',\n  SHADOW: 'shadow',\n});\n\nexport const FILE_EXTENSION = Object.freeze({\n  JSON: 'json',\n  JS: 'js',\n  COFFEE: 'coffee',\n  HTML: 'html',\n  TXT: 'txt',\n  CSV: 'csv',\n  PNG: 'png',\n  JPG: 'jpg',\n  JPEG: 'jpeg',\n  GIF: 'gif',\n  TIF: 'tif',\n  TIFF: 'tiff',\n  ZIP: 'zip',\n  PDF: 'pdf',\n  VCF: 'vcf',\n});\n\nexport const ENCODING = Object.freeze({\n  ASCII: 'ascii',\n  BASE64: 'base64',\n  BINARY: 'binary',\n  HEX: 'hex',\n  LATIN1: 'latin1',\n  UTF8: 'utf8',\n  UTF_8: 'utf-8',\n  UCS2: 'ucs2',\n  UCS_2: 'ucs-2',\n  UTF16LE: 'utf16le',\n  UTF_16LE: 'utf-16le',\n});\n","import handleDragDrop from './handleDragDrop';\nimport handleInput from './handleInput';\nimport handleShadowDragDrop from './handleShadowDragDrop';\nimport handleShadowInput from './handleShadowInput';\nimport { SUBJECT_NATURE, SUBJECT_TYPE } from '../constants';\n\nconst handlerMap = {\n  [SUBJECT_TYPE.INPUT]: {\n    [SUBJECT_NATURE.DOM]: handleInput,\n    [SUBJECT_NATURE.SHADOW]: handleShadowInput,\n  },\n  [SUBJECT_TYPE.DRAG_N_DROP]: {\n    [SUBJECT_NATURE.DOM]: handleDragDrop,\n    [SUBJECT_NATURE.SHADOW]: handleShadowDragDrop,\n  },\n};\n\nexport default ({ subjectType, subjectNature }) => handlerMap[subjectType][subjectNature];\n","import { isManualEventTrigger } from '../helpers';\n\nexport default ({ window, subject, force }, { files }) => {\n  const dataTransfer = new DataTransfer();\n  files.forEach(file => dataTransfer.items.add(file));\n  const input = subject[0];\n  input.files = dataTransfer.files;\n\n  if (isManualEventTrigger({ window, force })) {\n    return cy.wrap(subject).trigger('change', {\n      force: true,\n    });\n  }\n\n  return null;\n};\n","export default function isManualEventTrigger({ window, force }) {\n  if (force) {\n    /* https://github.com/abramenal/cypress-file-upload/issues/41 */\n    return true;\n  }\n\n  /* https://github.com/abramenal/cypress-file-upload/issues/34 */\n\n  const chromeRegExp = /(chrome\\/)(\\d+)/i;\n  const chromeMatcher = window.navigator.userAgent.match(chromeRegExp);\n\n  if (!chromeMatcher) {\n    return false;\n  }\n\n  const chromeVersion = Number.parseInt(chromeMatcher[2], 10);\n  return chromeVersion >= 73;\n}\n","export default ({ subject }, { files }) => {\n  const dataTransfer = new DataTransfer();\n  files.forEach(file => dataTransfer.items.add(file));\n  const input = subject[0];\n  input.files = dataTransfer.files;\n\n  return subject[0].dispatchEvent(new CustomEvent('change'));\n};\n","export default ({ subject }, { files }) => {\n  const dataTransfer = new DataTransfer();\n  files.forEach(file => dataTransfer.items.add(file));\n\n  return subject[0].dispatchEvent(\n    new CustomEvent('change', {\n      detail: {\n        files: dataTransfer.files,\n      },\n    }),\n  );\n};\n","export const ERR_TYPES = {\n  MISSING_FILENAME: {\n    message: '\"fileName\" is empty',\n    tip: 'You should provide valid \"fileName\" string for parsing',\n  },\n  MISSING_ENCODING: {\n    message: 'file encoding could not be determined automatically',\n    tip: 'You should either recheck \"fileName\" for any typos or provide the \"encoding\" for such file type manually',\n  },\n  INVALID_SUBJECT: {\n    message: 'passed subject element is not valid',\n    tip: 'If \"subjectType\" is \"input\", subject should be a valid HTML <input /> element',\n  },\n  INVALID_SUBJECT_TYPE: {\n    message: '\"subjectType\" is not valid',\n    tip: 'Please look into docs to find supported \"subjectType\" values',\n  },\n  INVALID_SUBJECT_NATURE: {\n    message: '\"subjectNature\" is not valid',\n    tip: 'Please look into docs to find supported \"subjectNature\" values',\n  },\n  INVALID_FORCE: {\n    message: '\"force\" is not valid',\n    tip: 'Please look into docs to find supported \"force\" values',\n  },\n  INVALID_FILE: {\n    message: 'One or more field is invalid within given file(s)',\n    tip: 'Please look into docs to find supported \"fileOrArray\" values',\n  },\n  INVALID_ENCODING: {\n    message: '\"encoding\" is not valid',\n    tip: 'Please look into docs to find supported \"encoding\" values',\n  },\n};\n\nexport class InternalError extends Error {\n  constructor(errorType, ...params) {\n    super(...params);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, InternalError);\n    }\n\n    this.name = '[cypress-file-upload error]';\n    this.message = `${errorType.message}.\\n${errorType.tip}`;\n  }\n}\n","import { SUBJECT_TYPE, SUBJECT_NATURE } from '../constants';\nimport { ERR_TYPES, InternalError } from '../error';\n\nconst INPUT_TAG_REGEX = /input/i;\n\nconst validationScheme = {\n  [SUBJECT_TYPE.INPUT]: {\n    [SUBJECT_NATURE.DOM]: element => INPUT_TAG_REGEX.test(element.tagName),\n    [SUBJECT_NATURE.SHADOW]: () => true,\n  },\n  [SUBJECT_TYPE.DRAG_N_DROP]: {\n    [SUBJECT_NATURE.DOM]: () => true,\n    [SUBJECT_NATURE.SHADOW]: () => true,\n  },\n};\n\nexport default ({ subject, subjectType, subjectNature }) => {\n  if (!subject || !subject[0] || !validationScheme[subjectType][subjectNature](subject[0])) {\n    throw new InternalError(ERR_TYPES.INVALID_SUBJECT);\n  }\n};\n","import getHandler from './handlers';\nimport { createFilesAsync, ensureDefaults } from './helpers';\nimport { validateEncoding, validateSubject, validateFiles, validateOptions } from './validators';\n\nconst PROCESSING_OPTIONS_DEFAULTS = {\n  subjectType: 'input',\n  subjectNature: 'dom',\n  force: false,\n};\n\nexport default (subject, fileOrArray, processingOptions) =>\n  cy.window({ log: false }).then(async window => {\n    const { subjectType, subjectNature, force } = ensureDefaults(processingOptions, PROCESSING_OPTIONS_DEFAULTS);\n    validateOptions({ subjectType, subjectNature, force });\n    /* Subject validation depends on options validation so required to go in this exact order */\n    validateSubject({ subject, subjectNature, subjectType });\n    validateFiles(fileOrArray);\n\n    const filesToUpload = await createFilesAsync({\n      files: Array.isArray(fileOrArray) ? fileOrArray : [fileOrArray],\n      validator: ({ encoding }) => validateEncoding(encoding),\n      constructor: (...args) => new window.File(...args),\n    });\n\n    Cypress.log({\n      name: 'upload',\n      displayName: 'UPLOAD',\n      message: filesToUpload.map(i => i.name).join(', '),\n      consoleProps: () => ({\n        subjectType,\n        subjectNature,\n        files: filesToUpload,\n        force,\n      }),\n    });\n\n    const handleFileUpload = getHandler({ subjectType, subjectNature });\n    handleFileUpload({ window, subject, force }, { files: filesToUpload });\n  });\n","import upload from './upload';\n\nexport default () => {\n  Cypress.Commands.add('upload', { prevSubject: true }, upload);\n};\n","export default function ensureDefaults(target = {}, defaults = {}) {\n  return {\n    ...defaults,\n    ...target,\n  };\n}\n","import { SUBJECT_TYPE, SUBJECT_NATURE } from '../constants';\nimport { ERR_TYPES, InternalError } from '../error';\n\nexport default ({ subjectType, subjectNature, force }) => {\n  if (Object.values(SUBJECT_TYPE).indexOf(subjectType) === -1) {\n    throw new InternalError(ERR_TYPES.INVALID_SUBJECT_TYPE);\n  }\n\n  if (Object.values(SUBJECT_NATURE).indexOf(subjectNature) === -1) {\n    throw new InternalError(ERR_TYPES.INVALID_SUBJECT_NATURE);\n  }\n\n  if (typeof force !== 'boolean') {\n    throw new InternalError(ERR_TYPES.INVALID_FORCE);\n  }\n};\n","import { ERR_TYPES, InternalError } from '../error';\n\nexport default fileOrArray => {\n  const filesToValidate = Array.isArray(fileOrArray) ? fileOrArray : [fileOrArray];\n  /* Note: \"encoding\" field is not mandatory */\n  filesToValidate.forEach(({ fileContent, fileName, mimeType }) => {\n    if (!fileContent || !fileName || !mimeType) {\n      throw new InternalError(ERR_TYPES.INVALID_FILE);\n    }\n  });\n};\n","import getEncoding from './getEncoding';\nimport getFileBlobAsync from './getFileBlobAsync';\n\nexport default ({ files, validator, constructor }) =>\n  Cypress.Promise.all(\n    files.map(async ({ fileContent, fileName, mimeType, encoding = getEncoding(fileName) }) => {\n      validator({ fileContent, fileName, mimeType, encoding });\n\n      const blob = await getFileBlobAsync({ fileContent, mimeType, encoding });\n      return constructor([blob], fileName, { type: mimeType });\n    }),\n  );\n","import { ENCODING, FILE_EXTENSION } from '../constants';\n\nexport default fileName => {\n  /*\n   * Copied from https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/fixture.coffee#L94\n   */\n  const extensionToEncodingMap = {\n    [FILE_EXTENSION.JSON]: ENCODING.UTF8,\n    [FILE_EXTENSION.JS]: ENCODING.UTF8,\n    [FILE_EXTENSION.COFFEE]: ENCODING.UTF8,\n    [FILE_EXTENSION.HTML]: ENCODING.UTF8,\n    [FILE_EXTENSION.TXT]: ENCODING.UTF8,\n    [FILE_EXTENSION.CSV]: ENCODING.UTF8,\n    [FILE_EXTENSION.PNG]: ENCODING.BASE64,\n    [FILE_EXTENSION.JPG]: ENCODING.BASE64,\n    [FILE_EXTENSION.JPEG]: ENCODING.BASE64,\n    [FILE_EXTENSION.GIF]: ENCODING.BASE64,\n    [FILE_EXTENSION.TIF]: ENCODING.BASE64,\n    [FILE_EXTENSION.TIFF]: ENCODING.BASE64,\n    [FILE_EXTENSION.ZIP]: ENCODING.BASE64,\n\n    /*\n     * Other extensions that are not supported by cy.fixture by default:\n     */\n    [FILE_EXTENSION.PDF]: ENCODING.UTF8,\n    [FILE_EXTENSION.VCF]: ENCODING.UTF8,\n  };\n\n  const extension = fileName.slice(fileName.lastIndexOf('.') + 1);\n  return extensionToEncodingMap[extension];\n};\n","import { ENCODING } from '../constants';\n\nexport default ({ fileContent, mimeType, encoding }) => {\n  const encodingToAsyncGetterMap = {\n    [ENCODING.ASCII]: () => Promise.resolve(fileContent),\n    [ENCODING.UTF8]: () => Promise.resolve(fileContent),\n    [ENCODING.UTF_8]: () => Promise.resolve(fileContent),\n    [ENCODING.BASE64]: () => Cypress.Blob.base64StringToBlob(fileContent, mimeType),\n    default: () => Cypress.Blob.base64StringToBlob(fileContent, mimeType),\n  };\n\n  return (encodingToAsyncGetterMap[encoding] || encodingToAsyncGetterMap.default)();\n};\n","import { InternalError, ERR_TYPES } from '../error';\nimport { ENCODING } from '../constants';\n\nexport default encoding => {\n  if (!encoding || Object.values(ENCODING).indexOf(encoding) === -1) {\n    throw new InternalError(ERR_TYPES.INVALID_ENCODING);\n  }\n};\n"],"names":["SUBJECT_TYPE","Object","freeze","INPUT","DRAG_N_DROP","SUBJECT_NATURE","DOM","SHADOW","FILE_EXTENSION","JSON","JS","COFFEE","HTML","TXT","CSV","PNG","JPG","JPEG","GIF","TIF","TIFF","ZIP","PDF","VCF","ENCODING","ASCII","BASE64","BINARY","HEX","LATIN1","UTF8","UTF_8","UCS2","UCS_2","UTF16LE","UTF_16LE","handlerMap","ref","ref$1","dataTransfer","DataTransfer","files","forEach","file","items","add","subject","chromeMatcher","navigator","userAgent","match","Number","parseInt","isManualEventTrigger","window","force","cy","wrap","trigger","dispatchEvent","CustomEvent","eventPayload","types","log","detail","ERR_TYPES","message","tip","InternalError","constructor","errorType","this","params","Error","captureStackTrace","name","INPUT_TAG_REGEX","validationScheme","element","test","tagName","PROCESSING_OPTIONS_DEFAULTS","subjectType","subjectNature","Cypress","Commands","prevSubject","fileOrArray","processingOptions","then","target","defaults","values","indexOf","validateOptions","validateSubject","Array","isArray","validateFiles","Promise","all","map","fileName","extensionToEncodingMap","slice","lastIndexOf","getEncoding","validator","fileContent","mimeType","encoding","encodingToAsyncGetterMap","resolve","Blob","base64StringToBlob","default","getFileBlobAsync","blob","type","createFilesAsync","validateEncoding","File","args","filesToUpload","displayName","i","join","consoleProps","handleFileUpload"],"mappings":"AAAA,QCAaA,EAAeC,OAAOC,OAAO,CACxCC,MAAO,QACPC,YAAa,gBAGFC,EAAiBJ,OAAOC,OAAO,CAC1CI,IAAK,MACLC,OAAQ,WAGGC,EAAiBP,OAAOC,OAAO,CAC1CO,KAAM,OACNC,GAAI,KACJC,OAAQ,SACRC,KAAM,OACNC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,IAAK,MACLC,IAAK,QAGMC,EAAWvB,OAAOC,OAAO,CACpCuB,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,IAAK,MACLC,OAAQ,SACRC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,SAAU,aCjCNC,EAAa,KAChBpC,EAAaG,WAAQ,IACnBE,EAAeC,cCNJ+B,EAA4BC,kDACpCC,EAAe,IAAIC,oBACzBC,EAAMC,iBAAQC,UAAQJ,EAAaK,MAAMC,IAAIF,KAC/BG,EAAQ,GAChBL,MAAQF,EAAaE,MCNd,SAA8BJ,qBAGlC,MAMHU,WAAuBC,UAAUC,UAAUC,MAD5B,4BAGhBH,GAIiBI,OAAOC,SAASL,EAAc,GAAI,KAChC,GDRpBM,CAAqB,QAAEC,QAAQC,IAC1BC,GAAGC,KAAKX,GAASY,QAAQ,SAAU,CACxCH,OAAO,IAIJ,QDLJlD,EAAeE,iBGTJ8B,EAAaC,6BACrBC,EAAe,IAAIC,oBACzBC,EAAMC,iBAAQC,UAAQJ,EAAaK,MAAMC,IAAIF,KAC/BG,EAAQ,GAChBL,MAAQF,EAAaE,MAEpBK,EAAQ,GAAGa,cAAc,IAAIC,YAAY,iBHK/C5D,EAAaI,iBAAc,IACzBC,EAAeC,cFZJ+B,EAAoBC,OAC5BuB,EAAe,eAEnBtB,aAAc,eAEZuB,MAAO,CAAC,kBAILN,GACJC,eAAc,CAAEM,KAAK,IACrBL,QAAQ,YAAaG,GACrBH,QAAQ,OAAQG,GAChBH,QAAQ,YAAaG,MEArBxD,EAAeE,iBIbJ8B,EAAaC,6BACrBC,EAAe,IAAIC,oBACzBC,EAAMC,iBAAQC,UAAQJ,EAAaK,MAAMC,IAAIF,KAEtCG,EAAQ,GAAGa,cAChB,IAAIC,YAAY,SAAU,CACxBI,OAAQ,CACNvB,MAAOF,EAAaE,cJU5B,QKjBawB,EASM,CACfC,QAAS,sCACTC,IAAK,iFAXIF,EAaW,CACpBC,QAAS,6BACTC,IAAK,gEAfIF,EAiBa,CACtBC,QAAS,+BACTC,IAAK,kEAnBIF,EAqBI,CACbC,QAAS,uBACTC,IAAK,0DAvBIF,EAyBG,CACZC,QAAS,oDACTC,IAAK,gEA3BIF,EA6BO,CAChBC,QAAS,0BACTC,IAAK,6DAIIC,cACXC,WAAYC,yEACJC,KAAGC,GAELC,EAAMC,mBACRD,EAAMC,kBAAkBH,KAAMH,QAG3BO,KAAO,mCACPT,QAAaI,gBAAuBA,EAAc,2FATxBG,OChC7BG,EAAkB,SAElBC,EAAmB,KACtB7E,EAAaG,WAAQ,IACnBE,EAAeC,cAAMwE,UAAWF,EAAgBG,KAAKD,EAAQE,YAC7D3E,EAAeE,0BAAe,QAEhCP,EAAaI,iBAAc,IACzBC,EAAeC,uBAAY,KAC3BD,EAAeE,0BAAe,MAInC,ICZM0E,EAA8B,CAClCC,YAAa,QACbC,cAAe,MACf5B,OAAO,GCJP6B,QAAQC,SAASxC,IAAI,SAAU,CAAEyC,aAAa,YDOhCxC,EAASyC,EAAaC,UACpChC,GAAGF,OAAO,CAAES,KAAK,IAAS0B,cAAWnC,wBEXAoC,EFY0BF,OEZjB,cAAIG,EFYgCV,OEZrB,IACtDhF,iBACF0F,kECCStD,uDAC4C,IAAtDpC,OAAO2F,OAAO5F,GAAc6F,QAAQX,SAChC,IAAId,EAAcH,OAGoC,IAA1DhE,OAAO2F,OAAOvF,GAAgBwF,QAAQV,SAClC,IAAIf,EAAcH,MAGL,kBAAVV,QACH,IAAIa,EAAcH,GHAxB6B,CAAgB,aAAEZ,gBAAaC,QAAe5B,aDGlClB,uBACTS,IAAYA,EAAQ,KAAO+B,kCAA6C/B,EAAQ,UAC7E,IAAIsB,EAAcH,GCHxB8B,CAAgB,SAAEjD,gBAASqC,cAAeD,aIb/BK,IACWS,MAAMC,QAAQV,GAAeA,EAAc,CAACA,IAEpD7C,iBAASL,qDAEf,IAAI+B,EAAcH,KJS1BiC,CAAcX,4BKbFlD,4CACd+C,QAAQe,QAAQC,YACRC,aAAWhE,sFCHNiE,OAIPC,EAAyB,YAC5B/F,EAAeC,MAAOe,EAASM,OAC/BtB,EAAeE,IAAKc,EAASM,OAC7BtB,EAAeG,QAASa,EAASM,OACjCtB,EAAeI,MAAOY,EAASM,OAC/BtB,EAAeK,KAAMW,EAASM,OAC9BtB,EAAeM,KAAMU,EAASM,OAC9BtB,EAAeO,KAAMS,EAASE,SAC9BlB,EAAeQ,KAAMQ,EAASE,SAC9BlB,EAAeS,MAAOO,EAASE,SAC/BlB,EAAeU,KAAMM,EAASE,SAC9BlB,EAAeW,KAAMK,EAASE,SAC9BlB,EAAeY,MAAOI,EAASE,SAC/BlB,EAAea,KAAMG,EAASE,SAK9BlB,EAAec,KAAME,EAASM,OAC9BtB,EAAee,KAAMC,EAASM,KAI1ByE,EADWD,EAASE,MAAMF,EAASG,YAAY,KAAO,IDvBIC,CAAYJ,eACzEK,EAAU,aAAEC,WAAaN,WAAUO,WAAUC,6BEJnCzE,iDACR0E,EAA2B,YAC9BvF,EAASC,yBAAc0E,QAAQa,QAAQJ,MACvCpF,EAASM,wBAAaqE,QAAQa,QAAQJ,MACtCpF,EAASO,yBAAcoE,QAAQa,QAAQJ,MACvCpF,EAASE,0BAAe0D,QAAQ6B,KAAKC,mBAAmBN,EAAaC,MACtEM,0BAAe/B,QAAQ6B,KAAKC,mBAAmBN,EAAaC,KAGtDE,EAAyBD,IAAaC,EAAyBI,WFHhDC,CAAiB,aAAER,WAAaC,WAAUC,mBAAvDO,UACChD,EAAY,CAACgD,GAAOf,EAAU,CAAEgB,KAAMT,4CLSnBU,CAAiB,CAC3C9E,MAAOuD,MAAMC,QAAQV,GAAeA,EAAc,CAACA,GACnDoB,mBAAYtE,mBQjBHyE,OACRA,IAA2D,IAA/C7G,OAAO2F,OAAOpE,GAAUqE,QAAQiB,SACzC,IAAI1C,EAAcH,GReOuD,cAC7BnD,qFAA0B,kCAAIf,EAAOmE,mBAAQC,uBAHzCC,OPDMtF,EOOZ+C,QAAQrB,IAAI,CACVY,KAAM,SACNiD,YAAa,SACb1D,QAASyD,EAActB,aAAIwB,UAAKA,EAAElD,OAAMmD,KAAK,MAC7CC,2CACE7C,gBACAC,EACA1C,MAAOkF,QACPpE,OAKJyE,EPpB+C5F,GAAnCC,EOmBwB,aAAE6C,gBAAaC,mCAClC,QAAE7B,UAAQR,QAASS,GAAS,CAAEd,MAAOkF,wCErC3C,IAAwBjC,EAAaC"}